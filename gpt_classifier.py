# gpt_classifier.py

import json
from openai import AsyncOpenAI
import asyncio

with open("config.json", "r") as f:
    config = json.load(f)

client = AsyncOpenAI(api_key=config["openai_key"])

SYSTEM_PROMPT = """
–¢—ã ‚Äî –ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç —Å–∞–π—Ç—ã –ø–æ –∏—Ö –∞–¥—Ä–µ—Å—É.
–ö–∞—Ç–µ–≥–æ—Ä–∏–∏:
üü¢ –†–µ–∞–ª—å–Ω—ã–µ —Å–∞–π—Ç—ã ‚Äî —Å–∞–π—Ç—ã —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –∏–ª–∏ —É—Å–ª—É–≥–∞–º–∏, —Å–∞–π—Ç –∫–æ–º–ø–∞–Ω–∏–∏ –∏–ª–∏ —Å–µ—Ä–≤–∏—Å–∞.
üü° –ö–∞—Ç–∞–ª–æ–≥–∏ –∏ –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä—ã ‚Äî —Å–∞–π—Ç—ã —Å –ø–æ–¥–±–æ—Ä–∫–∞–º–∏, —Å–ø–∏—Å–∫–∞–º–∏, —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏, –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã.
üî¥ –®—É–º/–º—É—Å–æ—Ä/–Ω–µ—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ–µ ‚Äî –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã, —Å–∞–π—Ç—ã —Å –æ—à–∏–±–∫–∞–º–∏, —Ä–µ–∫–ª–∞–º–∞, –Ω–µ—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.
–í–æ–∑–≤—Ä–∞—â–∞–π —Ç–æ–ª—å–∫–æ –†–µ–∞–ª—å–Ω—ã–µ —Å–∞–π—Ç—ã, –¥—Ä—É–≥–∏–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–π –∏ –Ω–µ –≤—ã–¥–∞–≤–∞–π.
"""

gpt_cache = {}

async def classify_url_async(url):
    try:
        response = await client.chat.completions.create(
            model="gpt-4",
            messages=[
                {"role": "system", "content": SYSTEM_PROMPT},
                {"role": "user", "content": url}
            ]
        )
        return response.choices[0].message.content

    except Exception as e:
        if hasattr(e, "status_code") and e.status_code == 401:
            print("‚ùå API –Ω–µ–π—Ä–æ—Å–µ—Ç–∫–∏ —Å–≥–æ—Ä–µ–ª–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω—É")
            return "‚ùå API –Ω–µ–π—Ä–æ—Å–µ—Ç–∫–∏ —Å–≥–æ—Ä–µ–ª–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω—É"
        else:
            print(f"‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
            return "‚ùå –û—à–∏–±–∫–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏"
